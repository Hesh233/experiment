#先运行服务端server，再运行客户端client，A是client，B是server，输入完后必须等待对方输入
import socket
import time
import ChessN
import string
s= socket.socket()
host = socket.gethostname()
port = 12345
s.connect((host,port))
print('Linked')
info = ''
c = ChessN.Chess()
c.outrange()
c.printchess()
k=0
count=0
while info != 'exit':
    print(info)
    info = info.split(",")
    if count!=0:
        print(info)
        print(type(info))
        try:
          info[0],info[1],info[2]
        except:
            print("对方赢了")
            break
        c.setchess(int(info[0]),int(info[1]),1)
        c.printchess()
        try:
           send_mes = c.input(k) + c.changeplayer(k)
        except:
            print("你赢了!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
            break
        # if c.checkwin(0):
        #     send_mes = "你赢了!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
        #     break
        send_mes = ','.join(send_mes)
        c.checkwin(int(info[2]))
    else:
        c.checkwin(k)
        send_mes = c.input(k)+c.changeplayer(k)
        send_mes = ','.join(send_mes)
        c.checkwin(k)
        count += 1
    # if c.checkwin(0):
    #     send_mes="你赢了!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
    #     break
    #print('服务端:'+str(info))
    #send_mes = str(send_mes)
    s.send(send_mes.encode())
    if send_mes =='exit':
        break
    info = s.recv(1024).decode() #下次发信息前卡在这
    time.sleep(1)                #防止粘包
    #c.printchess()
    #print ("对方发送")
s.close()
